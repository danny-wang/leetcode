Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?
For example,
Given sorted array nums = [1,1,1,2,2,3],
Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length.
因为这道题目的题意是要求我们在原数组上进行操作，所以操作变得稍微复杂了些，否则直接使用map最为简单。
基本思想是记录两个指针，一个是当前数组，另一个是目的数组，注意如果发现重复数超过2，那么目的数组的cur就要阻塞，
直到不同的出现后再赋值前进。
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        if(nums.size()==0)
            return 0;
        int size=0;
        int size_of_number=0;
        int last_number=-1;
        bool sign=false;
        size=1;
        last_number=nums[0];
        size_of_number=1;
        for(int i=1; i<nums.size();i++){
            if(nums[i]!=last_number){
                nums[size]=nums[i];
                size++;
                last_number=nums[i];
                size_of_number=1;
                
                
            }
            else if(nums[i]==last_number){
                if(size_of_number<2){
                    nums[size]=nums[i];
                    size++;
                    size_of_number++;
                   
                }
                else{
                    continue;
                }
            }
        }
        return size;
        
        
    }
};
