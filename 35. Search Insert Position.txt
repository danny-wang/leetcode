Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
You may assume no duplicates in the array.
Here are few examples.
[1,3,5,6], 5 → 2
[1,3,5,6], 2 → 1
[1,3,5,6], 7 → 4
[1,3,5,6], 0 → 0
用２分查找查找target，如果找到就返回，找不到的话　如果　left>right,　就应该放在left的位置，否则，放在right的位置。

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int left=0;
        int right=nums.size()-1;
        int medium=0;
        while(left<=right){
            medium=left+((right-left)/2);
            if(target==nums[medium])
                return medium;
            else if(target>nums[medium]){
                left=medium+1;
            }
            else{
                right=medium-1;
            }
        }
        if(left>right)
            return left;
        if(left<right)
            return right;
        return -1;
    }
};
