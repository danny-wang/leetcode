
Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.
For example, given n = 3, a solution set is:
[
  "((()))",
  "(()())",
  "(())()",
  "()(())",
  "()()()"
]

迭代，当左括号和右括号都等于0的时候，push_back。退出

class Solution {
public:
    void ivolution(vector<string>& result,string temp,int left,int right){
        if(left==0 &&right==0){
            result.push_back(temp);
            return ;
        }
        if(left>0)
            ivolution( result,temp+"(", left-1,right);
        if(left<right)
            ivolution(result, temp+")",left,right-1);
    }
    vector<string> generateParenthesis(int n) {
        vector<string> result;
        if(n==0)
        return result;
        ivolution(result,"",n,n);
        return result;
        
    }
};


