time exceed，边界条件考虑还是不够过关，会得到重复解，最后去重会超时，需要问题考虑的更加细致。


#include <cstdlib>
#include <iostream>
#include <map>
#include <set>
#include <string>
#include <stdlib.h>
#include <string>
#include <sstream>
#include <vector>
#include <algorithm>
using namespace std;
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> result;
        sort(nums.begin(),nums.end());

        int i=0;
        int size=nums.size()-2;
        int s=nums.size()-1;
        while(i<size){
           
            int j=i+1;
            int rever=0-nums[i];
            while(j<s){
                
                
                if(nums[j]+nums[s]==rever){
                    vector<int> a;
                    a.push_back(nums[i]);
                    a.push_back(nums[j]);
                    a.push_back(nums[s]);
        
                    result.push_back(a);
                   
                    j++;
                    s--;
                }
                else if(nums[j]+nums[s]<rever){
                    j++;
                    
                }
                    
                    
                else{
                    s--;
                  
                }
                    
            }
            i++;
            s=nums.size()-1;
           

        }
        sort(result.begin(),result.end());
        auto iter = unique(result.begin(),result.end());
        if(iter != result.end())
            result.erase(iter,result.end());
        return result;
    
    }
};
int main(int argc, char** argv)
{
    vector<vector<int>> a;
    vector<int> b={7,-1,14,-12,-8,7,2,-15,8,8,-8,-14,-4,-5,7,9,11,-4,-15,-6,1,-14,4,3,10,-5,2,1,6,11,2,-2,-5,-7,-6,2,-15,11,-6,8,-4,2,1,-1,4,-6,-15,1,5,-15,10,14,9,-8,-6,4,-6,11,12,-15,7,-1,-9,9,-1,0,-4,-1,-12,-2,14,-9,7,0,-3,-4,1,-2,12,14,-10,0,5,14,-1,14,3,8,10,-8,8,-5,-2,6,-11,12,13,-7,-12,8,6,-13,14,-2,-5,-11,1,3,-6};

    Solution sol;
    a=sol.threeSum(b);
    cout<<"--------------"<<endl;
    for(auto i : a){
        for(auto j : i)
            cout<<j<<" ";
        cout<<endl;
    }

    return 0;
}
