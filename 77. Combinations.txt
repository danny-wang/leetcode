Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.
For example,
If n = 4 and k = 2, a solution is:
[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]
思路：回溯法
class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> results;
        vector<int> path;
        helper(results,path,n,1,k);
        return results;
    }
    void helper(vector<vector<int>> & results, vector<int> path, int n, int start, int k){
        if(path.size()==k)
            results.push_back(path);
        else if(path.size()<k){
            for(int i=start; i<=n; i++){
                path.push_back(i);
                helper(results, path, n, i+1,k);
                path.pop_back();
            }
        }
        else{
            
        }
            
    }
};
