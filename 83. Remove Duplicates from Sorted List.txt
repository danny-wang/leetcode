Given a sorted linked list, delete all duplicates such that each element appear only once.
For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode *new_head=head;
        ListNode *temp;
        if(head==NULL )
            return head;
        int last_number=head->val;
        temp=head->next;
        ListNode *last_ptr=head;
        while(temp!=NULL){
            if(temp->val==last_number){
                last_ptr->next=temp->next;
            }
            if(temp->val!=last_number){
                last_ptr=temp;
                last_number=temp->val;
            }
            temp=temp->next;
        }
        return new_head;
    }
};
